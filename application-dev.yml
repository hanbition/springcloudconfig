server:
  port: 8005

eureka:
  client:
    service-url:
      defaultZone: http://www.eureka8001.com:8001/eureka
  instance:
    hostname: 127.0.0.1
    #instance-id: 01-consumer-8101
    # 设置当前Client每1秒向Server发送一次心跳，单位秒,默认30s
    lease-renewal-interval-in-seconds: 1
    # 指定让Server认定当前Client已经失效的时间，将来可以从注册表中剔除了，单位秒 默认 90s
    lease-expiration-duration-in-seconds: 3
spring:
  application:
    name: zuulServer-8005
  redis:
    host: 192.168.1.102
    port: 6380
    password: admin
    #连接超时时间（毫秒）
    timeout: 2000
    lettuce:
      pool:
        # 连接池最大连接数(使用负值表示没有限制) 默认为8
        max-active: 8
        # 连接池最大阻塞等待时间(使用负值表示没有限制) 默认为-1
        max-wait: -1ms
        # 连接池中的最大空闲连接 默认为8
        max-idle: 8
        # 连接池中的最小空闲连接 默认为 0
        min-idle: 0
zuul:
  routes:
    # 指定微服务的路由规则
    # *为通配符
    # /** 可以匹配0到多级路径
    # /* 只能匹配一级路径
    # /? 只能匹配一级路径，且路径只能包含一个字符
#    consumercloud-one: /testOne/**
#    consumercloud-two: /testTwo/**
    rout1:
      path: /testOne/**
      serviceId: consumercloud-one
    rout2:
      path: /testTwo/**
      serviceId: consumercloud-two

  # 屏蔽指定微服务名称
  #  ignored-services: 01-consumer-8101
  #屏蔽所有微服务名称
  ignored-services: "*"
  # 指定统一的前辍
  prefix: /han
  # 屏蔽指定的URI
  #  ignored-patterns: /**/list/**
  # 屏蔽掉指定的敏感头信息，其会将原来默认的Cookie、SetCookie、Authorization敏感头信息放开
#  sensitive-headers: token
  ratelimit:
    enabled: false
    repository: redis  #对应存储类型（用来存储统计信息）
    behind-proxy: true  #代理之后
#    default-policy:
#      limit: 3 #可选 - 每个刷新时间窗口对应的请求数量限制
#      quota: 1 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
#      refresh-interval: 3 # 刷新时间窗口的时间，默认值 (秒)
#      type: #可选 限流方式
#        - user
#        - origin
#        - url
    default-policy-list: #可选 - 针对所有的路由配置的策略，除非特别配置了policies
      - limit: 3 #可选 - 每个刷新时间窗口对应的请求数量限制
        quota: 1 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
        refresh-interval: 3 # 刷新时间窗口的时间，默认值 (秒)
        type: #可选 限流方式
          - user
          - origin
          - url
#      - limit: 10 #可选 - 每个刷新时间窗口对应的请求数量限制
#        quota: 1000 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
#        refresh-interval: 60 # 刷新时间窗口的时间，默认值 (秒)
#        type: #可选 限流方式
#          - httpmethod
#      - limit: 10 #可选 - 每个刷新时间窗口对应的请求数量限制
#        quota: 1000 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
#        refresh-interval: 60 # 刷新时间窗口的时间，默认值 (秒)
#        type: #可选 限流方式
#          - origin
#    policy-list: #可选 - 针对所有的路由配置的策略，除非特别配置了policies
#      token: #特定的路由
#        - limit: 2 #可选 - 每个刷新时间窗口对应的请求数量限制
#          quota: 1 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
#          refresh-interval: 3 # 刷新时间窗口的时间，默认值 (秒)
#          type: #可选 限流方式
#            - url
#            - httpmethod
#            - origin



hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 4000
          #隔离策略：thread 线程 semaphore 信号量 默认 thread
          #strategy: thread